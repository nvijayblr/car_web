// Contents
//
// Navbar
// Navbar Home
// Navbar nav
// Navbar text
// Navbar divider
// Responsive navbar
// Navbar position
// Navbar themes


// Navbar
//
// Provide a static navbar from which we expand to create full-width, fixed, and
// other navbar variations.

.navbar {
  position: relative;
  display: flex;
  flex-wrap: wrap; // allow us to do the line break for collapsing content
  align-items: center;
  justify-content: space-between; // space out brand from logo
  border-radius: $border-radius;
  box-shadow: $box-shadow-normal;
  overflow: hidden;
  margin-top: $grid-gutter-width / 2;
  margin-bottom: $grid-gutter-width / 2;

  // Because flex properties aren't inherited, we need to redeclare these first
  // few properities so that content nested within behave properly.
  > .container,
  > .container-fluid {
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    justify-content: space-between;
  }
}


// Navbar brand
//
// Used for brand, project, or site names.

.navbar-home,
.navbar-usermanuel {
  display: inline-block;
  padding: $navbar-brand-padding-y $navbar-brand-padding-x;
  line-height: inherit;
  white-space: nowrap;
  height: $display6-size * 4;

  

  @include hover-focus {
    text-decoration: none;
  }
}
.navbar-home{
  background-color: #7b8c9b;
  i{
    color: $white;
    font-size: $display3-size;
  }
}
.navbar-usermanuel{
  color: $gray-800;
  i{
    
  }
}


// Navbar nav
//
// Custom navbar navigation (doesn't require `.nav`, but does make use of `.nav-link`).

.navbar-nav {
  display: flex;
  flex-direction: column; // cannot use `inherit` to get the `.navbar`s value
  padding-left: 0;
  margin-bottom: 0;
  list-style: none;

  .nav-link {
    padding-right: $navbar-brand-padding-x * 2;
    padding-left: $navbar-brand-padding-x * 2;
    font-size: $display6-size;
    color: #656d77;
    font-family: $font-family-bold;
    height: $display6-size * 4;
  }

  .dropdown-menu {
    position: static;
    float: none;
  }
}


// Navbar text
//
//

.navbar-text {
  display: inline-block;
  // padding-top: $nav-link-padding-y;
  // padding-bottom: $nav-link-padding-y;
}


// Responsive navbar
//
// Custom styles for responsive collapsing and toggling of navbar contents.
// Powered by the collapse Bootstrap JavaScript plugin.

// When collapsed, prevent the toggleable navbar contents from appearing in
// the default flexbox row orienation. Requires the use of `flex-wrap: wrap`
// on the `.navbar` parent.
.navbar-collapse {
  flex-basis: 100%;
  flex-grow: 1;
  // For always expanded or extra full navbars, ensure content aligns itself
  // properly vertically. Can be easily overridden with flex utilities.
  align-items: center;

  display: flex !important;
}


// Generate series of `.navbar-expand-*` responsive classes for configuring
// where your navbar collapses.
.navbar-expand {
  > .container,
  > .container-fluid {
    padding-right: 0;
    padding-left: 0;
  }

  flex-flow: row nowrap;
  justify-content: flex-start;

  .navbar-nav {
    flex-direction: row;
  }

  // For nesting containers, have to redeclare for alignment purposes
  > .container,
  > .container-fluid {
    flex-wrap: nowrap;
  }

  .navbar-collapse {
    display: flex !important;  // stylelint-disable-line declaration-no-important

    // Changes flex-bases to auto because of an IE10 bug
    flex-basis: auto;
  }
  .show > .nav-link,
  .active > .nav-link,
  .nav-link.show,
  .nav-link.active {
    color: $black;
    position: relative;

    &:after{
      content: '';
      position: absolute;
      bottom: 0;
      width: 100%;
      height: 0.125rem;
      background-color:  $primary;
      left: 0;
    }
  }
}


// Navbar themes
//
// Styles for switching between navbars with light or dark background.

// Dark links against a light background
// .navbar-light {
//   .navbar-brand {
//     color: $navbar-light-active-color;
//
//     @include hover-focus {
//       color: $navbar-light-active-color;
//     }
//   }
//
//   .navbar-nav {
//     .nav-link {
//       color: $navbar-light-color;
//
//       @include hover-focus {
//         color: $navbar-light-hover-color;
//       }
//
//       &.disabled {
//         color: $navbar-light-disabled-color;
//       }
//     }
//
//     .show > .nav-link,
//     .active > .nav-link,
//     .nav-link.show,
//     .nav-link.active {
//       color: $navbar-light-active-color;
//     }
//   }
//
//   .navbar-toggler {
//     color: $navbar-light-color;
//     border-color: $navbar-light-toggler-border-color;
//   }
//
//   .navbar-toggler-icon {
//     background-image: $navbar-light-toggler-icon-bg;
//   }
//
//   .navbar-text {
//     color: $navbar-light-color;
//     a {
//       color: $navbar-light-active-color;
//
//       @include hover-focus {
//         color: $navbar-light-active-color;
//       }
//     }
//   }
// }

// White links against a dark background
// .navbar-dark {
//   .navbar-brand {
//     color: $navbar-dark-active-color;
//
//     @include hover-focus {
//       color: $navbar-dark-active-color;
//     }
//   }
//
//   .navbar-nav {
//     .nav-link {
//       color: $navbar-dark-color;
//
//       @include hover-focus {
//         color: $navbar-dark-hover-color;
//       }
//
//       &.disabled {
//         color: $navbar-dark-disabled-color;
//       }
//     }
//
//     .show > .nav-link,
//     .active > .nav-link,
//     .nav-link.show,
//     .nav-link.active {
//       color: $navbar-dark-active-color;
//     }
//   }
//
//   .navbar-toggler {
//     color: $navbar-dark-color;
//     border-color: $navbar-dark-toggler-border-color;
//   }
//
//   .navbar-toggler-icon {
//     background-image: $navbar-dark-toggler-icon-bg;
//   }
//
//   .navbar-text {
//     color: $navbar-dark-color;
//     a {
//       color: $navbar-dark-active-color;
//
//       @include hover-focus {
//         color: $navbar-dark-active-color;
//       }
//     }
//   }
// }
